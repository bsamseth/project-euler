cmake_minimum_required (VERSION 3.0.2)
project (projecteuler)
enable_language(CXX)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++17 -Wall -Wextra")


find_package(OpenMP)
if(OpenMP_CXX_FOUND)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS} -DOPENMP_ENABLED")
endif()

# Utility headers:
include_directories(eulertools/include cppitertools)

# Ask CMake to output a compile_commands.json file for use with things like Vim YCM.
set( CMAKE_EXPORT_COMPILE_COMMANDS 1 )

IF( EXISTS "${CMAKE_CURRENT_BINARY_DIR}/compile_commands.json" )
    message(STATUS "Exporting compile_commands.json to source directory.")
    EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E copy_if_different
        ${CMAKE_CURRENT_BINARY_DIR}/compile_commands.json
        ${CMAKE_CURRENT_SOURCE_DIR}/compile_commands.json
        )
ELSE()
    message(STATUS "compile_commands.json not exported. Rerun cmake.")
ENDIF()


# Add every problem with a C++ solution.
add_subdirectory(012)
add_subdirectory(014)
add_subdirectory(058)
add_subdirectory(060)
add_subdirectory(062)
add_subdirectory(069)
add_subdirectory(070)
add_subdirectory(071)
add_subdirectory(072)
add_subdirectory(073)
add_subdirectory(074)
add_subdirectory(075)
add_subdirectory(076)
add_subdirectory(078)
add_subdirectory(083)
add_subdirectory(085)
add_subdirectory(086)
add_subdirectory(087)
add_subdirectory(088)
add_subdirectory(090)
add_subdirectory(091)
add_subdirectory(092)
add_subdirectory(095)
add_subdirectory(096)
add_subdirectory(099)
add_subdirectory(100)
add_subdirectory(102)
add_subdirectory(103)
add_subdirectory(104)
add_subdirectory(105)
add_subdirectory(107)
add_subdirectory(108)
add_subdirectory(109)
add_subdirectory(110)
add_subdirectory(112)
add_subdirectory(113)
add_subdirectory(120)
add_subdirectory(122)
add_subdirectory(124)
add_subdirectory(125)
add_subdirectory(145)
add_subdirectory(205)
add_subdirectory(206)
add_subdirectory(301)
add_subdirectory(323)
add_subdirectory(347)
add_subdirectory(357)
add_subdirectory(493)
add_subdirectory(500)
